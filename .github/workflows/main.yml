name: Container Build

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run every night at midnight (UTC)
  workflow_dispatch:
    inputs:
      previous_container_hash:
        description: 'Hash of the previous container image'
        required: true

jobs:
  check_base_image_and_code:
    runs-on: ubuntu-latest

    steps:    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        outputs: type=docker,dest=/tmp/container.tar
        tags: ghcr.io/${{ github.repository }}:temp

    - name: Compute container hash
      id: container_hash
      run: |
        CONTAINER_HASH=$(sha256sum /tmp/container.tar | cut -d ' ' -f 1)
        echo "Container hash: $CONTAINER_HASH"
        echo "::set-output name=container_hash::$CONTAINER_HASH"

    - name: Check if the container hash is different
      id: check_container_hash
      run: |
        echo "Current container hash: ${{ steps.container_hash.outputs.container_hash }}"
        echo "Previous container hash: ${{ github.event.inputs.previous_container_hash }}"

        if [ \"${{ steps.container_hash.outputs.container_hash }}" != "${{ github.event.inputs.previous_container_hash }}" ]; then
          echo "Build required!"
          echo "::set-output name=build_required::true"
        else
          echo "No build required, aborting."
          echo "::set-output name=build_required::false"
        fi

  docker-build-push:
    runs-on: ubuntu-latest
    needs: check_base_image_and_code
    if: needs.check_base_image_and_code.outputs.build_required == true

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set current date and time as an environment variable
        run: echo "CURRENT_DATE_TIME=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=docker,dest=/tmp/container.tar
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.CURRENT_DATE_TIME }}
            ghcr.io/${{ github.repository }}:latest
