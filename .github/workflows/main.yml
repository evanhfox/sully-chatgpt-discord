name: Container Build

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run every night at midnight (UTC)
  workflow_dispatch:

jobs:
  build_and_check_vulnerabilities:
    runs-on: ubuntu-latest

    steps:    
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        outputs: type=docker,dest=/tmp/container.tar
        tags: ghcr.io/${{ github.repository }}:temp

    - name: Export Docker image to tar
      run: |
        docker save ghcr.io/${{ github.repository }}:temp -o /tmp/container.tar

    - name: Check for critical vulnerabilities
      id: check_vulnerabilities
      run: |
        docker load --input /tmp/container.tar
        VULNERABILITY_FOUND=$(docker run --rm -i aquasec/trivy:latest image --severity CRITICAL ghcr.io/${{ github.repository }}:temp | grep "Total: 0")
        if [ -z "$VULNERABILITY_FOUND" ]; then
          echo "Critical vulnerabilities found, build required!"
          echo "::set-output name=build_required::true"
        else
          echo "No critical vulnerabilities found, build not required."
          echo "::set-output name=build_required::false"
        fi


  docker-build-push:
    runs-on: ubuntu-latest
    needs: build_and_check_vulnerabilities
    if: needs.build_and_check_vulnerabilities.outputs.build_required == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set current date and time as an environment variable
        run: echo "CURRENT_DATE_TIME=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.CURRENT_DATE_TIME }}
            ghcr.io/${{ github.repository }}:latest
