name: Container Build

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run every night at midnight (UTC)
  workflow_dispatch:

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=docker,dest=/tmp/container.tar
          tags: ghcr.io/${{ github.repository }}:temp

      - name: Upload container tar
        uses: actions/upload-artifact@v2
        with:
          name: container-tar
          path: /tmp/container.tar

  build_and_check_vulnerabilities:
    runs-on: ubuntu-latest
    needs: build_image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download container tar
        uses: actions/download-artifact@v2
        with:
          name: container-tar
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/container.tar

      - name: Check for critical vulnerabilities
        id: check_vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:temp'
          exit-code: '0'
          severity: 'CRITICAL'
          ignore-unfixed: 'false'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true
        
      - name: Display Trivy scan results
        if: always()
        run: |
          echo "=== Trivy Scan Results ==="
          cat trivy-results.sarif

      - name: Set build_required output
        id: set_build_required
        run: |
          VULNERABILITY_FOUND=$(grep -c "\"level\":\"error\"" trivy-results.sarif || true)
          if [ $VULNERABILITY_FOUND -gt 0 ] || [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo $VULNERABILITY_FOUND
            echo "Build required!"
            echo "::set-output name=build_required::true"
          else
            echo "No critical vulnerabilities found and not a push to main, build not required."
            echo "::set-output name=build_required::false"
          fi


  docker_build_push:
    runs-on: ubuntu-latest
    needs: build_and_check_vulnerabilities
    if: needs.build_and_check_vulnerabilities.outputs.build_required != 'false'
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set current date and time as an environment variable
        run: echo "CURRENT_DATE_TIME=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.CURRENT_DATE_TIME }}
            ghcr.io/${{ github.repository }}:latest